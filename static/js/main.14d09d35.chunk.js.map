{"version":3,"sources":["n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/superComponents/c1-SuperInputText/SuperInputText.module.css","n1-main/m1-ui/superComponents/c2-SuperButton/SuperButton.module.css","n1-main/m1-ui/superComponents/c3-SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/routes/pages/Registration/Register.module.css","n1-main/m1-ui/routes/pages/Error404.tsx","n1-main/m1-ui/superComponents/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/superComponents/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/superComponents/c1-SuperInputText/SuperInputText.tsx","n1-main/m3-dal/api.ts","n1-main/m2-bll/authReducer.ts","n1-main/m1-ui/routes/pages/Login.tsx","n1-main/m1-ui/routes/pages/Profile.tsx","n1-main/m2-bll/registrationReducer.ts","n1-main/m1-ui/routes/pages/Registration/Register.tsx","n1-main/m1-ui/routes/pages/NewPassword.tsx","n1-main/m1-ui/routes/pages/PasswordRecovery.tsx","n1-main/m1-ui/routes/pages/TestPage.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/Main.tsx","App.tsx","reportWebVitals.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Error404","SuperButton","red","className","restProps","finalClassName","s","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","errorInput","superInput","value","key","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","delete","registerAPI","initialState","isLoggedIn","userData","setIsLoggedInAC","setUserDataAC","payload","logoutTC","dispatch","then","Login","useDispatch","useSelector","state","auth","formik","useFormik","initialValues","validate","values","errors","test","onSubmit","res","userDataFromApi","_id","data","name","avatar","publicCardPacksCount","response","message","alert","loginTC","resetForm","to","handleSubmit","placeholder","handleChange","Profile","isRegistered","Register","register","confirmedPassword","length","catch","registerTC","form","touched","getFieldProps","NewPassword","PasswordRecovery","TestPage","PATH","Routes","path","exact","render","Header","wrapper","activeClassName","active","onClick","console","log","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14d09d35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Header_active__2DgLn\",\"wrapper\":\"Header_wrapper__YVqso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2j4-_\",\"errorInput\":\"SuperInputText_errorInput__3onHK\",\"error\":\"SuperInputText_error__geYwr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1E02K\",\"red\":\"SuperButton_red__3SVRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2MmIV\",\"spanClassName\":\"SuperCheckbox_spanClassName__3WU-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Register_form__1UEj7\"};","import React from 'react'\r\n\r\nexport const  Error404 = () => {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string | null\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create(\r\n    {\r\n        baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n        // baseURL: `http://localhost:7542/2.0`,\r\n        withCredentials: true,\r\n    })\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/me')\r\n    }\r\n}\r\n\r\nexport const registerAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post('/auth/register', {email, password})\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../m3-dal/api\";\r\n\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    userData: null as UserDataType | null\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'login/SET-USER-DATA':\r\n            return {...state, userData: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//actions\r\nexport const setIsLoggedInAC = (value: boolean) => ({\r\n    type: 'login/SET-IS-LOGGED-IN', value\r\n} as const)\r\n\r\nexport const setUserDataAC = (payload: UserDataType | null) => ({\r\n    type: 'login/SET-USER-DATA', payload\r\n} as const)\r\n\r\n//thunks\r\nexport const loginTC = (values: UserLoginData) => (dispatch: Dispatch<ActionsType>) => {\r\n\r\n    try {\r\n        authAPI.login(values.email, values.password, values.rememberMe).then(res => {\r\n            const userDataFromApi: UserDataType = {\r\n                _id: res.data._id,\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                avatar: res.data.avatar || null,\r\n                publicCardPacksCount: res.data.publicCardPacksCount\r\n            }\r\n            dispatch(setUserDataAC(userDataFromApi))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : e.message\r\n        alert(error)\r\n    }\r\n}\r\n\r\nexport const logoutTC = (dispatch: Dispatch<ActionsType>) => {\r\n    try {\r\n        authAPI.logout().then(() => {\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setUserDataAC(null))\r\n        })\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC> | ReturnType<typeof setUserDataAC>\r\n\r\nexport type UserLoginData = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string | null\r\n    publicCardPacksCount: number\r\n}","import React from 'react'\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../superComponents/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"../../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from \"../../../m2-bll/authReducer\";\r\nimport {useFormik} from 'formik';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../../m2-bll/store\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password is required';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n            formik.resetForm();\r\n        },\r\n    });\r\n\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2> Login </h2>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n\r\n                <SuperInputText type='email'\r\n                                placeholder='Enter your E-mail'\r\n                                name='email'\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.email}/> <br/>\r\n\r\n                <SuperInputText type='password'\r\n                                placeholder='Enter your password'\r\n                                name='password'\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.password}/> <br/>\r\n\r\n                <SuperCheckbox name='rememberMe'\r\n                               onChange={formik.handleChange}/> Remember me <br/>\r\n\r\n                <SuperButton type='submit'>\r\n                    Login\r\n                </SuperButton>\r\n            </form>\r\n\r\n            <NavLink to='/recovery'>Forgot Password</NavLink> <br/>\r\n            <NavLink to=\"/register\"><SuperButton> Sign Up </SuperButton></NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../m2-bll/store\";\r\nimport {Login} from \"./Login\";\r\n\r\nexport const  Profile = () => {\r\n\r\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\r\n\r\n    if (!isLoggedIn) {\r\n        return <Login />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import {registerAPI} from \"../m3-dal/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState = {\r\n    isRegistered: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registerReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"register/SET-SIGN-UP\":\r\n            return {...state, isRegistered: action.isRegistered}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setSignUpAC = (isRegistered: boolean) => ({\r\n    type: 'register/SET-SIGN-UP',\r\n    isRegistered\r\n} as const)\r\n\r\n//thunks\r\nexport const registerTC = (values: UserLoginData) => (dispatch: Dispatch<ActionsType>) => {\r\n    registerAPI.register(values.email, values.password)\r\n        .then(() => {\r\n            debugger\r\n            dispatch(setSignUpAC(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : e.message\r\n            alert(error)\r\n        })\r\n}\r\n\r\n//types\r\ntype ActionsType = ReturnType<typeof setSignUpAC>\r\ntype UserLoginData = {\r\n    email: string\r\n    password: string\r\n}","import React from 'react'\r\nimport s from './Register.module.css'\r\nimport {useFormik} from 'formik';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport SuperInputText from \"../../../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../superComponents/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../m2-bll/store\";\r\nimport {registerTC} from \"../../../../m2-bll/registrationReducer\";\r\n\r\ntype SignupFormErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmedPassword?: string\r\n}\r\nexport const Register = () => {\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector((state: AppStoreType) => state.register.isRegistered)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmedPassword: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: SignupFormErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address.';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password is required'\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must be at least 8 symbols'\r\n            }\r\n            if (values.password && !values.confirmedPassword) {\r\n                errors.confirmedPassword = 'Confirm your password'\r\n            } else if (values.password !== values.confirmedPassword) {\r\n                errors.confirmedPassword = 'You entered two different passwords.'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            if (values.password === values.confirmedPassword) {\r\n                dispatch(registerTC(values))\r\n                formik.resetForm()\r\n            }\r\n        },\r\n    })\r\n\r\n    if(isRegistered) {\r\n        return <Redirect to={'./login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Registration</h2>\r\n            <form onSubmit={formik.handleSubmit} className={s.form}>\r\n\r\n                <SuperInputText\r\n                    type='email'\r\n                    placeholder='Enter your email'\r\n                    name='email'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                <SuperInputText\r\n                    type='password'\r\n                    placeholder='Enter your password'\r\n                    name='password'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n                <SuperInputText\r\n                    type='password'\r\n                    placeholder='Confirm your password'\r\n                    error={formik.touched.confirmedPassword ? formik.errors.confirmedPassword : null}\r\n                    {...formik.getFieldProps('confirmedPassword')}                        //name\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.confirmedPassword}\r\n                />\r\n\r\n                <div>\r\n                    <NavLink to='/login'><SuperButton> Cancel </SuperButton></NavLink>\r\n                    <SuperButton type={'submit'}> Register </SuperButton>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const  NewPassword = () => {\r\n    return (\r\n        <div>\r\n            NewPassword\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const  PasswordRecovery = () => {\r\n    return (\r\n        <div>\r\n            PasswordRecovery\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport SuperInputText from \"../../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../superComponents/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const  TestPage = () => {\r\n    return (\r\n        <div>\r\n            TestPage\r\n            <SuperInputText/>\r\n            <SuperButton/>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch } from \"react-router-dom\";\r\nimport {Error404} from \"./pages/Error404\";\r\nimport {Login} from \"./pages/Login\";\r\nimport {Profile} from \"./pages/Profile\";\r\nimport {Register} from \"./pages/Registration/Register\";\r\nimport {NewPassword} from \"./pages/NewPassword\";\r\nimport {PasswordRecovery} from \"./pages/PasswordRecovery\";\r\nimport {TestPage} from \"./pages/TestPage\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTER: '/register',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RECOVERY: '/password-recovery',\r\n    NEW_PASSWORD: '/new-password',\r\n    TEST: '/test'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.TEST}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.PASSWORD_RECOVERY} render={() => <PasswordRecovery/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.TEST} render={() => <TestPage/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Header.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {PATH} from \"../routes/Routes\";\r\nimport SuperButton from \"../superComponents/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logoutTC} from \"../../m2-bll/authReducer\";\r\nimport {AppStoreType} from \"../../m2-bll/store\";\r\n\r\nexport const Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.wrapper}>\r\n                <NavLink to={PATH.LOGIN} activeClassName={s.active}>Login</NavLink>\r\n                <NavLink to={PATH.TEST} activeClassName={s.active}>Test</NavLink>\r\n                <NavLink to={PATH.REGISTER} activeClassName={s.active}>Register</NavLink>\r\n                <NavLink to={PATH.PROFILE} activeClassName={s.active}>Profile</NavLink>\r\n                <SuperButton onClick={() => {dispatch(logoutTC)\r\n                    console.log(isLoggedIn)}}>Log out</SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Header} from \"./m1-ui/header/Header\";\r\nimport {Routes} from \"./m1-ui/routes/Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <>\r\n            <HashRouter>\r\n                <Header/>\r\n                <Routes/>\r\n            </HashRouter>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Main} from \"./n1-main/Main\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {registerReducer} from \"./registrationReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    register: registerReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./n1-main/m2-bll/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}