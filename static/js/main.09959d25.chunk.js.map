{"version":3,"sources":["n1-main/m1-ui/components/Error404.tsx","n1-main/m1-ui/superComponents/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/superComponents/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/superComponents/c1-SuperInputText/SuperInputText.tsx","n1-main/m3-dal/api.ts","n1-main/m2-bll/app-reducer.ts","n1-main/m2-bll/auth-reducer.ts","n1-main/m1-ui/components/Login/Login.tsx","n1-main/m1-ui/components/Profile.tsx","n1-main/m2-bll/registration-reducer.ts","n1-main/m1-ui/components/Registration/Register.tsx","n1-main/m2-bll/setNewPassword-reducer.ts","n1-main/m1-ui/components/NewPassword.tsx","n1-main/m2-bll/recoverPassword-reducer.ts","n1-main/m1-ui/components/ForgotPassword.tsx","n1-main/m1-ui/components/TestPage.tsx","n1-main/m2-bll/packs-reducer.ts","n1-main/m1-ui/components/Packs/Pack/Pack.tsx","n1-main/m1-ui/superComponents/c8-SuperDoubleRange/SuperDoubleRange.tsx","n1-main/m1-ui/superComponents/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/components/Packs/Packs.tsx","n1-main/m1-ui/components/Cards/Card/Card.tsx","n1-main/m2-bll/cards-reducer.ts","n1-main/m1-ui/components/Cards/Cards.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/Main.tsx","n1-main/m1-ui/superComponents/Loader/Loader.tsx","App.tsx","reportWebVitals.ts","n1-main/m2-bll/store.ts","index.tsx","n1-main/m1-ui/common/styles.module.css","n1-main/m1-ui/components/Cards/Card/Card.module.css","n1-main/m1-ui/components/Packs/Pack/Pack.module.css","n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/components/Packs/Packs.module.css","n1-main/m1-ui/superComponents/c1-SuperInputText/SuperInputText.module.css","n1-main/m1-ui/superComponents/c2-SuperButton/SuperButton.module.css","n1-main/m1-ui/superComponents/c3-SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/components/Login/Login.module.css","n1-main/m1-ui/components/Cards/Cards.module.css","n1-main/m1-ui/superComponents/Loader/Loader.module.css"],"names":["Error404","SuperButton","red","className","restProps","finalClassName","s","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","superInput","errorInput","value","key","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","delete","registerAPI","recoverPasswordAPI","message","resetPasswordToken","packsAPI","data","min","max","sort","sortPacks","page","pageCount","userId","user_id","get","cardsPack","id","put","cardsAPI","cardsPack_id","card","_id","initialState","status","setAppStatusAC","isLoggedIn","userData","authError","setIsLoggedInAC","setUserDataAC","payload","logoutTC","dispatch","then","Login","useDispatch","useSelector","state","auth","authErrorMessage","formik","useFormik","initialValues","validate","values","errors","test","onSubmit","res","userDataFromApi","name","avatar","publicCardPacksCount","catch","response","errorMessage","loginTC","resetForm","to","bgr","handleSubmit","form","placeholder","touched","getFieldProps","style","Profile","isRegistered","Register","register","confirmedPassword","length","alert","registerTC","isNewPassword","NewPassword","newPasswordSet","setNewPassword","token","useParams","confirmPassword","recoveredPassword","ForgotPassword","forgotPassword","recoverPasswordTC","Message","props","TestPage","cardPacks","totalPacksCount","pageSize","currentPage","getPacksTC","totalPacks","cardPacksTotalCount","setPacksAC","console","log","Pack","packItem","packSpecification","cardsCount","updated","onClick","delPack","updatePack","SuperDoubleRange","onChangeRange","Slider","margin","height","valueLabelDisplay","aria-labelledby","SuperSelect","options","onChangeOption","mappedOptions","map","op","i","Packs","packs","userID","useCallback","delPackTC","updatePackTC","pages","pagesCount","Math","ceil","push","useEffect","mappedPacks","p","st","titleParent","option","filter","paginator","Pagination","count","boundaryCount","defaultPage","pageNumber","onPageChangedHandler","packContents","Card","cardItem","cardSpecification","question","answer","grade","more_id","delCard","updateCard","packId","cards","getCardsTC","setCardsAC","Cards","packID","delCardTC","updateCardTC","mappedCards","c","addCard","addCardTC","cardContents","PATH","Routes","path","exact","render","Header","wrapper","activeClassName","active","Main","Loader","ldsCircle","App","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.09959d25.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const  Error404 = () => {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    // const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : ''} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import axios from \"axios\";\r\nimport {GetPacksRequestDataType, UpdatePacksRequestDataType} from \"../m2-bll/packs-reducer\";\r\nimport {GetCardsRequestDataType} from \"../m2-bll/cards-reducer\";\r\n\r\nexport const instance = axios.create(\r\n    {\r\n        baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n        // baseURL: `http://localhost:7542/2.0`,\r\n        withCredentials: true,\r\n    })\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/me')\r\n    },\r\n}\r\n\r\nexport const registerAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post('/auth/register', {email, password})\r\n    }\r\n}\r\n\r\nexport const recoverPasswordAPI = {\r\n    recoverPassword(email: string, message: string) {\r\n        return instance.post('/auth/forgot', {email, message})\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post('/auth/set-new-password', {password, resetPasswordToken})\r\n    }\r\n}\r\n\r\nexport const packsAPI = {\r\n    getPacks(data: GetPacksRequestDataType) {\r\n        const min = data.min ?? 0\r\n        const max = data.max ?? 5\r\n        const sort = data.sortPacks ?? 0\r\n        const page = data.page ?? 10\r\n        const pageCount = data.pageCount ?? '10'\r\n        const userId = data.user_id ? `&user_id=${data.user_id}` : ''\r\n        // const packName = data.packName ?? 'english'\r\n        return instance\r\n            .get(`/cards/pack?pageCount=${pageCount}&min=${min}&max=${max}&sortPacks=${sort}&page=${page}${userId}`)\r\n    },\r\n    addPack(data: AddPackRequestDataType) {\r\n        return instance.post('/cards/pack', {cardsPack: data})\r\n    },\r\n    deletePack(id: string) {\r\n        return instance.delete(`/cards/pack?id=${id}`)\r\n    },\r\n    updatePack(data: UpdatePacksRequestDataType) {\r\n        return instance.put('/cards/pack', {cardsPack: data})\r\n    },\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards(data: GetCardsRequestDataType,) {\r\n        // const cardAnswer = data.cardAnswer ?? 'english'\r\n        // const cardQuestion = data.cardQuestion ?? 'english'\r\n        const cardsPack_id = data.cardsPack_id ?? '612ce7f59f1a7900041d6f3a'\r\n        // const min = data.min ?? 1\r\n        // const max = data.max ?? 4\r\n        // const sort = data.sortCards ?? 0\r\n        // const page = data.page ?? 1\r\n        return instance\r\n            .get(`/cards/card?cardsPack_id=${cardsPack_id}`)\r\n    },\r\n    addCard(data: CreateCardRequestDataType) {\r\n        return instance.post('/cards/card', {card: {cardsPack_id: data.cardsPack_id}})\r\n    },\r\n    deleteCard(id: string) {\r\n        return instance.delete(`/cards/card?id=${id}`)\r\n    },\r\n    updateCard(data: UpdateCardsRequestDataType) {\r\n        return instance.put('/cards/card', {card: {_id: data._id}})\r\n    },\r\n}\r\n\r\n//types\r\n\r\nexport type CreateCardRequestDataType = {\r\n    cardsPack_id: string\r\n    question?: string\r\n    answer?: string\r\n    grade?: number\r\n    shots?: number\r\n    type?: string\r\n}\r\n\r\nexport type AddPackRequestDataType = {\r\n    name?: string\r\n    private?: boolean\r\n}\r\n\r\nexport type UpdateCardsRequestDataType = {\r\n    _id?: string\r\n    question?: string\r\n    comments?: string\r\n    packId?: string\r\n}","export type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    status: 'idle' as RequestStatusType\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({\r\n    type: 'APP/SET-STATUS',\r\n    status\r\n} as const)\r\n\r\ntype ActionsType = ReturnType<typeof setAppStatusAC>\r\n\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../m3-dal/api\";\r\nimport {setAppStatusAC} from \"./app-reducer\";\r\n\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    userData: null as UserDataType | null,\r\n    authError: '',\r\n\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'login/SET-USER-DATA':\r\n            return {...state, userData: action.payload}\r\n        case 'login/SET-AUTH-ERROR':\r\n            return {...state, authError: action.errorMessage}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//actions\r\nexport const setIsLoggedInAC = (value: boolean) => ({\r\n    type: 'login/SET-IS-LOGGED-IN', value\r\n} as const)\r\n\r\nexport const setUserDataAC = (payload: UserDataType | null) => ({\r\n    type: 'login/SET-USER-DATA', payload\r\n} as const)\r\n\r\nconst setAuthErrorAC = (errorMessage: string) => ({\r\n    type: 'login/SET-AUTH-ERROR', errorMessage\r\n} as const)\r\n\r\n//thunks\r\nexport const loginTC = (values: UserLoginData) => (dispatch: Dispatch<ActionsType>) => {\r\n\r\n    dispatch(setAppStatusAC('loading'))\r\n\r\n    authAPI.login(values.email, values.password, values.rememberMe)\r\n        .then((res) => {\r\n            const userDataFromApi: UserDataType = {\r\n                _id: res.data._id,\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                avatar: res.data.avatar || null,\r\n                publicCardPacksCount: res.data.publicCardPacksCount\r\n            }\r\n            dispatch(setUserDataAC(userDataFromApi))\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch ((e) => {\r\n        const error = e.response ? e.response.data.error : e.message\r\n        dispatch(setAuthErrorAC(error))\r\n        dispatch(setAppStatusAC('failed'))\r\n\r\n})\r\n}\r\n\r\nexport const logoutTC = (dispatch: Dispatch<ActionsType>) => {\r\n    try {\r\n        authAPI.logout().then(() => {\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setUserDataAC(null))\r\n        })\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setUserDataAC>\r\n    | ReturnType<typeof setAppStatusAC>\r\n    | ReturnType<typeof setAuthErrorAC>\r\n\r\n\r\nexport type UserLoginData = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string | null\r\n    publicCardPacksCount: number\r\n}","import React from 'react'\r\nimport s from '../../common/styles.module.css'\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../superComponents/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"../../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from \"../../../m2-bll/auth-reducer\";\r\nimport {useFormik} from 'formik';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../../m2-bll/store\";\r\nimport style from './Login.module.css'\r\n\r\ntype LoginErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\r\n    const authErrorMessage = useSelector((state: AppStoreType) => state.auth.authError)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: LoginErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password is required';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n            formik.resetForm();\r\n        },\r\n    });\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.bgr}>\r\n            <h2> Login </h2>\r\n\r\n            <form onSubmit={formik.handleSubmit} className={s.form}>\r\n\r\n                <SuperInputText\r\n                    type='email'\r\n                    placeholder='E-mail'\r\n                    error={formik.touched.email ? formik.errors.email : null}\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n\r\n                <SuperInputText\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    error={formik.touched.password ? formik.errors.password : null}\r\n                    {...formik.getFieldProps('password')}\r\n                />\r\n\r\n                <br/>\r\n\r\n                <div>\r\n                    <SuperCheckbox {...formik.getFieldProps('rememberMe')}/>\r\n                    Remember me\r\n                </div>\r\n\r\n                <div className={style.authError}>\r\n                    {authErrorMessage}\r\n                </div>\r\n\r\n                <SuperButton type='submit'>\r\n                    Login\r\n                </SuperButton>\r\n            </form>\r\n\r\n            <NavLink to='/forgot-password'>Forgot Password</NavLink> <br/>\r\n            <NavLink to=\"/register\">Sign Up</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../m2-bll/store\";\r\nimport {Login} from \"./Login/Login\";\r\n\r\nexport const  Profile = () => {\r\n\r\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\r\n\r\n    if (!isLoggedIn) {\r\n        return <Login />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import {registerAPI} from \"../m3-dal/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppStatusAC} from \"./app-reducer\";\r\n\r\nconst initialState = {\r\n    isRegistered: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registerReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"register/SET-SIGN-UP\":\r\n            return {...state, isRegistered: action.isRegistered}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setSignUpAC = (isRegistered: boolean) => ({\r\n    type: 'register/SET-SIGN-UP',\r\n    isRegistered\r\n} as const)\r\n\r\n//thunks\r\nexport const registerTC = (values: UserLoginData) => {\r\n    return (dispatch: Dispatch<ActionsType>) =>  {\r\n        dispatch(setAppStatusAC('loading'))\r\n        registerAPI.register(values.email, values.password)\r\n            .then(() => {\r\n                dispatch(setSignUpAC(true))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response ? e.response.data.error : e.message\r\n                alert(error)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n//types\r\ntype ActionsType = ReturnType<typeof setSignUpAC> | ReturnType<typeof setAppStatusAC>\r\ntype UserLoginData = {\r\n    email: string\r\n    password: string\r\n}","import React from 'react'\r\nimport s from '../../common/styles.module.css'\r\nimport {useFormik} from 'formik';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport SuperInputText from \"../../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../m2-bll/store\";\r\nimport {registerTC} from \"../../../m2-bll/registration-reducer\";\r\n\r\ntype SignupFormErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmedPassword?: string\r\n}\r\nexport const Register = () => {\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector((state: AppStoreType) => state.register.isRegistered)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmedPassword: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: SignupFormErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address.';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password is required'\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must be at least 8 symbols'\r\n            }\r\n            if (values.password && !values.confirmedPassword) {\r\n                errors.confirmedPassword = 'Confirm your password'\r\n            } else if (values.password !== values.confirmedPassword) {\r\n                errors.confirmedPassword = 'You entered two different passwords.'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            if (values.password === values.confirmedPassword) {\r\n                dispatch(registerTC(values))\r\n                formik.resetForm()\r\n            }\r\n        },\r\n    })\r\n\r\n    if(isRegistered) {\r\n        return <Redirect to={'./login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.bgr}>\r\n            <h1>it-incubator</h1>\r\n            <h2>Sign In</h2>\r\n            <form onSubmit={formik.handleSubmit} className={s.form}>\r\n\r\n                <SuperInputText\r\n                    type='email'\r\n                    placeholder='Email'\r\n                    error={formik.touched.email ? formik.errors.email : null}\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n\r\n                <SuperInputText\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    error={formik.touched.password ? formik.errors.password : null}\r\n                    {...formik.getFieldProps('password')}\r\n                    //formik.getFieldProps вместо этого:\r\n                    // name='password'\r\n                    // onChange={formik.handleChange}\r\n                    // value={formik.values.password}\r\n                />\r\n\r\n                <SuperInputText\r\n                    type='password'\r\n                    placeholder='Confirm your password'\r\n                    error={formik.touched.confirmedPassword ? formik.errors.confirmedPassword : null}\r\n                    {...formik.getFieldProps('confirmedPassword')}\r\n                />\r\n                <div>\r\n                    <NavLink to='/login'><SuperButton> Cancel </SuperButton></NavLink>\r\n                    <SuperButton type={'submit'}> Register </SuperButton>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}","import {setAppStatusAC} from \"./app-reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {recoverPasswordAPI} from \"../m3-dal/api\";\r\n\r\nconst initialState = {\r\n  isNewPassword: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const setNewPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'setNewPassword/SET-NEW-PASSWORD':\r\n      return {...state, isNewPassword: true}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// AC\r\nconst setNewPasswordAC = () => ({\r\n  type: 'setNewPassword/SET-NEW-PASSWORD'\r\n} as const)\r\n\r\n\r\n// Thunk\r\nexport const setNewPasswordTC = (password: string, resetPasswordToken: string) => {\r\n  return (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    recoverPasswordAPI.setNewPassword(password, resetPasswordToken)\r\n    .then(() => {\r\n      dispatch(setNewPasswordAC())\r\n      dispatch(setAppStatusAC('succeeded'))\r\n    })\r\n    .catch((e) => {\r\n      const error = e.response ? e.response.data.error : e.message\r\n      alert(error)\r\n    })\r\n  }\r\n}\r\n\r\n// Type\r\ntype ActionsType = ReturnType<typeof setNewPasswordAC> | ReturnType<typeof setAppStatusAC>","import React from 'react'\r\nimport s from '../common/styles.module.css'\r\nimport SuperInputText from \"../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/c2-SuperButton/SuperButton\";\r\nimport {useFormik} from \"formik\";\r\nimport {setNewPasswordTC} from \"../../m2-bll/setNewPassword-reducer\";\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../m2-bll/store\";\r\n\r\ntype SetNewPassErrorType = {\r\n  password?: string\r\n  confirmPassword?: string\r\n}\r\n\r\nexport const  NewPassword = () => {\r\n  const dispatch = useDispatch()\r\n  const newPasswordSet = useSelector((state: AppStoreType) => state.setNewPassword.isNewPassword)\r\n  const {token} = useParams<{ token: string }>()\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      password: '',\r\n      confirmPassword: ''\r\n    },\r\n    validate: (values) => {\r\n      // debugger\r\n      const errors: SetNewPassErrorType = {};\r\n      if (!values.password) {\r\n        errors.password = 'Password is required'\r\n      } else if (values.password.length < 8) {\r\n        errors.password = 'Password must be at least 8 symbols'\r\n      }\r\n      if (values.password && !values.confirmPassword) {\r\n        errors.confirmPassword = 'Confirm your password'\r\n      } else if (values.password !== values.confirmPassword) {\r\n        errors.confirmPassword = 'You entered two different passwords.'\r\n      }\r\n      return errors;\r\n    },\r\n    onSubmit: values => {\r\n      // debugger\r\n      if (values.password === values.confirmPassword) {\r\n        dispatch(setNewPasswordTC(values.confirmPassword, token))\r\n        formik.resetForm()\r\n      }\r\n      // dispatch(setNewPasswordTC(values.password, token))\r\n    },\r\n  });\r\n\r\n  if (newPasswordSet) {\r\n    return <Redirect to={'/login'}/>\r\n  }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.bgr}>\r\n              <h1>it-incubator</h1>\r\n              <h2>Set new password</h2>\r\n              <form onSubmit={formik.handleSubmit} className={s.form}>\r\n                <SuperInputText\r\n                  type='password'\r\n                  placeholder='New password'\r\n                  error={formik.touched.password ? formik.errors.password : null}\r\n                  {...formik.getFieldProps('password')}\r\n                />\r\n                <SuperInputText\r\n                  type='password'\r\n                  placeholder='Confirm your new password'\r\n                  error={formik.touched.confirmPassword ? formik.errors.confirmPassword : null}\r\n                  {...formik.getFieldProps('confirmPassword')}\r\n                />\r\n                <SuperButton type={'submit'}>Set new password</SuperButton>\r\n              </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {recoverPasswordAPI} from \"../m3-dal/api\";\r\nimport {setAppStatusAC} from \"./app-reducer\";\r\n\r\nconst initialState = {\r\n    recoveredPassword: false\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const recoverPasswordReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'recoverPassword/CHANGE-PASSWORD':\r\n            return {...state, recoveredPassword: true}\r\n        default: return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const recoverPasswordAC = () => ({\r\n    type: 'recoverPassword/CHANGE-PASSWORD'\r\n} as const)\r\n\r\n//thunks\r\nexport const recoverPasswordTC = ( email: string, message: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) =>  {\r\n        dispatch(setAppStatusAC('loading'))\r\n        recoverPasswordAPI.recoverPassword(email, message)\r\n            .then(() => {\r\n                dispatch(recoverPasswordAC())\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n            .catch((e) => {\r\n                const error = e.response ? e.response.data.error : e.message\r\n                alert(error)\r\n            })\r\n    }\r\n}\r\n// types\r\ntype ActionsType = ReturnType<typeof recoverPasswordAC> | ReturnType<typeof setAppStatusAC>","import React from 'react'\r\nimport s from '../common/styles.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {recoverPasswordTC} from \"../../m2-bll/recoverPassword-reducer\";\r\nimport SuperButton from \"../superComponents/c2-SuperButton/SuperButton\";\r\nimport {useFormik} from \"formik\";\r\nimport SuperInputText from \"../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport {AppStoreType} from '../../m2-bll/store';\r\n\r\nexport type RecoveryFormikErrorType = {\r\n    email?: string\r\n}\r\nexport const ForgotPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const recoveredPassword = useSelector((state: AppStoreType) => state.forgotPassword.recoveredPassword)\r\n\r\n\r\n    const message = `<div style=\"background-color: lime; padding: 15px\">\r\n            password recovery link:\t<a href='https://Peleka.github.io/cards-game/#/new-password/$token$'>link</a>\r\n            </div>`\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: RecoveryFormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = \"Email is required\"\r\n            } else if (values.email.length < 11) {\r\n                errors.email = \"Email should be more 10 symbols\"\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(recoverPasswordTC(values.email, message))\r\n        },\r\n    })\r\n\r\n    return (\r\n        <div className={s.bgr}>\r\n            <h1>it-incubator</h1>\r\n            <h2>Forgot your password?</h2>\r\n            {!recoveredPassword\r\n                ? <div>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <SuperInputText type='email'\r\n                                        placeholder='Email'\r\n                                        {...formik.getFieldProps('email')}\r\n                        />\r\n                        <SuperButton type={'submit'}>Send instructions</SuperButton>\r\n                    </form>\r\n                </div>\r\n                : <Message email={formik.values.email}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype MessagePropsType = {\r\n    email: string\r\n}\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div>\r\n            <h4>Check your Email</h4>\r\n            <span>\r\n                click the link in the message in your email {props.email}\r\n            </span>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport SuperInputText from \"../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../superComponents/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const  TestPage = () => {\r\n    return (\r\n        <div>\r\n            TestPage\r\n            <SuperInputText/>\r\n            <SuperButton/>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    )\r\n}","import {AddPackRequestDataType, packsAPI} from \"../m3-dal/api\";\r\nimport {setAppStatusAC} from \"./app-reducer\";\r\nimport {AppThunkType} from \"./store\";\r\n\r\nconst initialState = {\r\n    cardPacks: null as null | PackResponseType[],\r\n    totalPacksCount: 0,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const packsReducer = (state = initialState, action: PacksActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PACKS/SET-PACKS':\r\n            return {...state, cardPacks: action.data}\r\n        case 'SET-TOTAL-PACKS-COUNT':\r\n            return {...state, totalPacksCount: action.totalPacks}\r\n        case 'SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.pageNumber}\r\n        case 'PACKS/DEL-PACK':\r\n            return state\r\n        case 'PACKS/UPDATE-PACK':\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nexport const setPacksAC = (data: PackResponseType[]) => ({\r\n    type: 'PACKS/SET-PACKS',\r\n    data,\r\n} as const)\r\nconst setTotalPacksCountAC = (totalPacks: number) => ({\r\n    type: 'SET-TOTAL-PACKS-COUNT',\r\n    totalPacks,\r\n} as const)\r\nexport const setCurrentPage = (pageNumber: number) => ({\r\n    type: 'SET-CURRENT-PAGE',\r\n    pageNumber,\r\n} as const)\r\nexport const delPackAC = (id: string) => ({\r\n    type: 'PACKS/DEL-PACK',\r\n    id\r\n} as const)\r\nexport const updatePackAC = (data: UpdatePacksRequestDataType) => ({\r\n    type: 'PACKS/UPDATE-PACK',\r\n    data\r\n} as const)\r\n\r\n//thunk\r\nexport const getPacksTC = (data: GetPacksRequestDataType): AppThunkType => (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n\r\n    packsAPI.getPacks(data)\r\n        .then(res => {\r\n\r\n            dispatch(setTotalPacksCountAC(res.data.cardPacksTotalCount))\r\n            dispatch(setPacksAC(res.data.cardPacks))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch(() => {\r\n            dispatch(setAppStatusAC('failed'))\r\n            console.log('get packs error')\r\n        })\r\n}\r\n\r\nexport const addPackTC = (data: AddPackRequestDataType): AppThunkType => (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    debugger\r\n    packsAPI.addPack(data)\r\n        .then(() => {\r\n            dispatch(getPacksTC({\r\n                pageCount: '100',\r\n                page: 1,\r\n            }))\r\n            console.log('pack added successfully')\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        })\r\n        .catch(() => {\r\n            dispatch(setAppStatusAC('failed'))\r\n            console.log('add pack error')\r\n        })\r\n}\r\n\r\nexport const delPackTC = (id: string): AppThunkType => dispatch => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    packsAPI.deletePack(id)\r\n        .then(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(getPacksTC({}))\r\n            console.log('pack deleted successfully')\r\n        })\r\n        .catch(() => {\r\n            dispatch(setAppStatusAC('failed'))\r\n            console.log('delete pack error')\r\n        })\r\n}\r\n\r\nexport const updatePackTC = (data: UpdatePacksRequestDataType): AppThunkType => (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    packsAPI.updatePack(data)\r\n        .then(() => {\r\n            dispatch(getPacksTC({}))\r\n            console.log('pack updated successfully')\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch(() => {\r\n            dispatch(setAppStatusAC('failed'))\r\n            console.log('update pack error')\r\n        })\r\n}\r\n\r\n//types\r\nexport type PacksActionsType = ReturnType<typeof setPacksAC>\r\n    | ReturnType<typeof setAppStatusAC>\r\n    | ReturnType<typeof setTotalPacksCountAC>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof delPackAC>\r\n    | ReturnType<typeof updatePackAC>\r\n\r\nexport type GetPacksRequestDataType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: number\r\n    page?: number\r\n    pageCount?: string\r\n    user_id?: string\r\n}\r\n\r\nexport type PackResponseType = {\r\n    \"_id\": string,\r\n    \"user_id\": string,\r\n    \"user_name\": string,\r\n    \"private\": boolean,\r\n    \"name\": string,\r\n    \"path\": string,\r\n    \"grade\": number,\r\n    \"shots\": number,\r\n    \"cardsCount\": number,\r\n    \"type\": string,\r\n    \"rating\": number,\r\n    \"created\": string,\r\n    \"updated\": string,\r\n    \"more_id\": string,\r\n    \"__v\": number,\r\n}\r\n\r\nexport type UpdatePacksRequestDataType = {\r\n    _id: string\r\n    name?: string\r\n    private?: boolean\r\n}\r\n","import React from \"react\";\r\nimport SuperButton from \"../../../superComponents/c2-SuperButton/SuperButton\";\r\nimport s from './Pack.module.css'\r\nimport {PackResponseType, UpdatePacksRequestDataType} from \"../../../../m2-bll/packs-reducer\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Pack = (props: PackPropsType) => {\r\n\r\n  const delPack = () => {\r\n    props.delPack(props._id)\r\n  }\r\n  const updatePack = () => {\r\n      props.updatePack({_id: props._id, name: \"Dima's updated pack\"})\r\n  }\r\n\r\n  // ОнКлик на кнопку Edit\r\n  // const updatePack = () => {\r\n  //   props.updatePacks(props.updatePacks.cardsPack)\r\n  // }\r\n    return (\r\n        <div className={s.packItem}>\r\n            <div className={s.packSpecification}>{props.name}</div>\r\n            <div className={s.packSpecification}>{props.cardsCount}</div>\r\n            <div className={s.packSpecification}>{props.updated}</div>\r\n            <div className={s.packSpecification}><SuperButton onClick={delPack}>Delete</SuperButton></div>\r\n            <div className={s.packSpecification}><SuperButton onClick={updatePack}>Edit</SuperButton></div>\r\n            <div className={s.packSpecification}><NavLink to={`/cards/${props._id}`}>cards</NavLink></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\n\r\ntype PackPropsType = PackResponseType &\r\n    {\r\n        updatePack: (data: UpdatePacksRequestDataType) => void\r\n        delPack: (id: string) => void\r\n    }","import React from \"react\";\r\nimport {Slider} from \"@material-ui/core\";\r\n\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?:  (event: any, value: number | number[]) => void\r\n    value?: [number, number]\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange, value,\r\n        // min, max, step, disable, ...\r\n    }\r\n) => {\r\n    // сделать самому, можно подключать библиотеки\r\n\r\n    return (\r\n        <>\r\n            <Slider\r\n                style={{margin: '0', height: '20px'}}\r\n                value={value}\r\n                onChange={onChangeRange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                name='cards count'\r\n                min={0}\r\n                max={20}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperDoubleRange;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: Array<string>\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions = options?.map((op, i) => { //type\r\n            return (\r\n                <option key={i} value={op}>\r\n                    {op}\r\n                </option>\r\n            )\r\n        }\r\n    )\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, useCallback, useEffect} from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Pagination } from '@material-ui/lab';\r\nimport {\r\n    addPackTC,\r\n    delPackTC,\r\n    getPacksTC,\r\n    setCurrentPage,\r\n    UpdatePacksRequestDataType,\r\n    updatePackTC\r\n} from \"../../../m2-bll/packs-reducer\";\r\nimport {Pack} from \"./Pack/Pack\";\r\nimport {AppStoreType} from \"../../../m2-bll/store\";\r\nimport s from './Pack/Pack.module.css'\r\nimport st from './Packs.module.css'\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\nimport {Login} from \"../Login/Login\";\r\nimport SuperDoubleRange from \"../../superComponents/c8-SuperDoubleRange/SuperDoubleRange\";\r\nimport SuperSelect from \"../../superComponents/c5-SuperSelect/SuperSelect\";\r\n\r\nexport const Packs = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const cardPacks = useSelector((state: AppStoreType) => state.packs.cardPacks)\r\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\r\n    const totalPacks = useSelector((state: AppStoreType) => state.packs.totalPacksCount)\r\n    const pageSize = useSelector((state: AppStoreType) => state.packs.pageSize)\r\n    const currentPage = useSelector((state: AppStoreType) => state.packs.currentPage)\r\n    const userID = useSelector((state: AppStoreType) => state.auth.userData?._id)\r\n    const delPack = useCallback(function (id: string) {\r\n        dispatch(delPackTC(id))\r\n    }, [dispatch])\r\n    const updatePack = useCallback(function (data: UpdatePacksRequestDataType) {\r\n        dispatch(updatePackTC(data))\r\n    }, [dispatch])\r\n    const showMyPacks = () => {\r\n        dispatch(getPacksTC({user_id: userID}))\r\n    }\r\n\r\n    //pagination\r\n    let pages = []\r\n    let pagesCount = Math.ceil(totalPacks / pageSize)\r\n    for (let i = 1; i <= pagesCount; i++) pages.push(i)\r\n    const onPageChangedHandler = (p: number) => {\r\n        dispatch(setCurrentPage(p))\r\n        dispatch(getPacksTC({page: currentPage}))\r\n    }\r\n    //\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC({\r\n            pageCount: '100',\r\n            page: 1,\r\n        }))\r\n    }, [dispatch])\r\n\r\n    const mappedPacks = cardPacks && cardPacks.map((p, i) => <Pack\r\n        key={i}\r\n        {...p}\r\n        delPack={delPack}\r\n        updatePack={updatePack}\r\n    />)\r\n\r\n    if (!isLoggedIn) {\r\n        return <Login />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={st.titleParent}>\r\n\r\n                <h1>Packs</h1>\r\n\r\n                <div className={st.pageCount}>\r\n                    <SuperSelect\r\n                        options={['10', '5', '20', '50', '100']}\r\n                        onChangeOption={(option: string) => dispatch(getPacksTC({pageCount: option}))}/> pages displayed\r\n                </div>\r\n\r\n                <div className={st.filter}>\r\n                    <SuperDoubleRange\r\n                        value={[0, 20]}\r\n                        onChangeRange={(e:ChangeEvent<{}>, value: number | number[]) => {\r\n                            let min = typeof value === 'object' ? value[0] : 3\r\n                            let max = typeof value === 'object' ? value[1] : 6\r\n                            dispatch(getPacksTC({min: min, max: max}))\r\n                        }}/>\r\n                </div>\r\n\r\n                <div className={st.paginator}>\r\n\r\n                    <Pagination count={pagesCount}\r\n                                boundaryCount={1}\r\n                                defaultPage={1}\r\n                                page={currentPage}\r\n                                onChange={(e: ChangeEvent<any>, p: number) => onPageChangedHandler(p)}/>\r\n\r\n                    <SuperButton onClick={showMyPacks}> show my packs </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`${s.packItem} ${st.packContents}`}>\r\n                <div>name</div>\r\n                <div>cards count</div>\r\n                <div>last update</div>\r\n                <div><SuperButton onClick={() => dispatch(addPackTC({name: 'Aleks/Dima/Elena pack'}))}>add</SuperButton>\r\n                </div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n\r\n            {mappedPacks}\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport SuperButton from \"../../../superComponents/c2-SuperButton/SuperButton\";\r\nimport s from './Card.module.css'\r\nimport {CardType} from \"../../../../m2-bll/cards-reducer\";\r\nimport {UpdateCardsRequestDataType} from \"../../../../m3-dal/api\";\r\n\r\ntype CardPropsType = CardType & {\r\n    delCard: (id: string) => void\r\n    updateCard: (data: UpdateCardsRequestDataType) => void\r\n    packId: string\r\n}\r\n\r\nexport const Card = (props: CardPropsType) => {\r\n\r\n    const deleteCardHandler = () => props._id && props.delCard(props._id)\r\n    const updateCardHandler = () => {\r\n        props._id && props.updateCard({_id: props._id, packId: props.packId})\r\n    }\r\n\r\n    return (\r\n        <div className={s.cardItem}>\r\n            <div className={s.cardSpecification}>{props.question}</div>\r\n            <div className={s.cardSpecification}>{props.answer}</div>\r\n            <div className={s.cardSpecification}>{props.grade}</div>\r\n            <div className={s.cardSpecification}>{props.updated}</div>\r\n            <div className={s.cardSpecification}>{props.more_id}</div>\r\n            <div className={s.cardSpecification}><SuperButton onClick={deleteCardHandler}>delete</SuperButton></div>\r\n            <div className={s.cardSpecification}><SuperButton onClick={updateCardHandler}>edit</SuperButton></div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import {setAppStatusAC} from \"./app-reducer\";\r\nimport {cardsAPI, CreateCardRequestDataType, UpdateCardsRequestDataType} from \"../m3-dal/api\";\r\nimport {AppThunkType} from \"./store\";\r\n\r\nconst initialState = {\r\n    cards: null as Array<CardType> | null\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: CardsActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'CARDS/SET-CARDS':\r\n            return {...state, cards: action.data}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setCardsAC = (data: CardType[]) => ({\r\n    type: 'CARDS/SET-CARDS',\r\n    data\r\n} as const)\r\n\r\n\r\n//thunk\r\nexport const getCardsTC = (data: GetCardsRequestDataType): AppThunkType => dispatch => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.getCards(data)\r\n        .then(res => {\r\n            dispatch(setCardsAC(res.data.cards))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch(() => {\r\n            dispatch(setAppStatusAC('failed'))\r\n            console.log('get cards error')\r\n        })\r\n}\r\n\r\nexport const addCardTC = (data: CreateCardRequestDataType): AppThunkType => dispatch => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.addCard(data)\r\n        .then(() => {\r\n            dispatch(getCardsTC(data))\r\n            console.log(\"card added succeeded\")\r\n        })\r\n        .catch(e => {\r\n            const error = e.res ? e.res.data.error : (`Add card failed: ${e.message}.`)\r\n            alert(error)\r\n        })\r\n}\r\n\r\nexport const delCardTC = (id: string): AppThunkType => dispatch => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.deleteCard(id)\r\n        .then(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(getCardsTC({}))\r\n            console.log('card deleted successfully')\r\n        })\r\n        .catch(() => {\r\n            dispatch(setAppStatusAC('failed'))\r\n            console.log('delete card error')\r\n        })\r\n}\r\n\r\nexport const updateCardTC = (data: UpdateCardsRequestDataType): AppThunkType => dispatch => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.updateCard(data)\r\n        .then(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(getCardsTC({cardsPack_id: data.packId}))\r\n\r\n            console.log(\"card updated\")\r\n        })\r\n        .catch(() => {\r\n            dispatch(setAppStatusAC('failed'))\r\n            console.log(\"update card error\")\r\n        })\r\n}\r\n\r\n//types\r\nexport type CardsActionsType = ReturnType<typeof setCardsAC> |\r\n    ReturnType<typeof setAppStatusAC>\r\n\r\nexport type GetCardsRequestDataType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardsPack_id?: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: number\r\n    page?: number\r\n    pageCount?: number\r\n}\r\n\r\nexport type CardType = {\r\n    cardsPack_id: string\r\n    answer?: string\r\n    comments?: string\r\n    created?: string\r\n    grade?: number\r\n    more_id?: string\r\n    question?: string\r\n    questionImg?: string\r\n    rating?: number\r\n    shots?: number\r\n    type?: string\r\n    updated?: string\r\n    user_id?: string\r\n    __v?: number\r\n    _id?: string\r\n}\r\n","import React, {useCallback, useEffect} from \"react\"\r\nimport s from \"./Card/Card.module.css\";\r\nimport st from \"./Cards.module.css\"\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\nimport {Card} from \"./Card/Card\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../m2-bll/store\";\r\nimport {addCardTC, delCardTC, getCardsTC, updateCardTC} from \"../../../m2-bll/cards-reducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Login} from \"../Login/Login\";\r\nimport {CreateCardRequestDataType, UpdateCardsRequestDataType} from \"../../../m3-dal/api\";\r\n\r\nexport const Cards = () => {\r\n    const dispatch = useDispatch()\r\n    const cards = useSelector((state: AppStoreType) => state.cards.cards)\r\n    const {packID} = useParams<{ packID: string }>()\r\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\r\n\r\n    const delCard = useCallback((id: string) => {\r\n        dispatch(delCardTC(id))\r\n    }, [dispatch])\r\n\r\n    const updateCard = useCallback((data: UpdateCardsRequestDataType) => {\r\n        dispatch(updateCardTC(data))\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsTC({cardsPack_id: packID}))\r\n    }, [dispatch, packID])\r\n\r\n    const mappedCards = cards && cards.map((c, i) => <Card\r\n        key={i}\r\n        {...c}\r\n        packId={packID}\r\n        delCard={delCard}\r\n        updateCard={updateCard}\r\n    />)\r\n\r\n    const addCard = (data: CreateCardRequestDataType) => {\r\n        dispatch(addCardTC(data))\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Login/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1>Cards</h1>\r\n            </div>\r\n\r\n            <div className={`${s.cardItem} ${st.cardContents}`}>\r\n                <div>question</div>\r\n                <div>answer</div>\r\n                <div>grade</div>\r\n                <div>last update</div>\r\n                <div>url</div>\r\n                <div><SuperButton onClick={() => addCard({cardsPack_id: packID})}>add</SuperButton></div>\r\n                <div></div>\r\n            </div>\r\n\r\n            {mappedCards}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch } from \"react-router-dom\";\r\nimport {Error404} from \"../components/Error404\";\r\nimport {Login} from \"../components/Login/Login\";\r\nimport {Profile} from \"../components/Profile\";\r\nimport {Register} from \"../components/Registration/Register\";\r\nimport {NewPassword} from \"../components/NewPassword\";\r\nimport {ForgotPassword} from \"../components/ForgotPassword\";\r\nimport {TestPage} from \"../components/TestPage\";\r\nimport {Packs} from \"../components/Packs/Packs\";\r\nimport {Cards} from \"../components/Cards/Cards\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTER: '/register',\r\n    PROFILE: '/profile',\r\n    FORGOT_PASSWORD: '/forgot-password',\r\n    NEW_PASSWORD: '/new-password',\r\n    TEST: '/test',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards/:packID',\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.TEST}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.FORGOT_PASSWORD} render={() => <ForgotPassword/>}/>\r\n                <Route path={PATH.NEW_PASSWORD + '/:token?'} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.TEST} render={() => <TestPage/>}/>\r\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route path={PATH.CARDS} render={() => <Cards/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Header.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {PATH} from \"../routes/Routes\";\r\nimport SuperButton from \"../superComponents/c2-SuperButton/SuperButton\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {logoutTC} from \"../../m2-bll/auth-reducer\";\r\n\r\nexport const Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.wrapper}>\r\n                <NavLink to={PATH.LOGIN} activeClassName={s.active}>Login</NavLink>\r\n                <NavLink to={PATH.TEST} activeClassName={s.active}>Test</NavLink>\r\n                <NavLink to={PATH.REGISTER} activeClassName={s.active}>Register</NavLink>\r\n                <NavLink to={PATH.PROFILE} activeClassName={s.active}>Profile</NavLink>\r\n                <NavLink to={PATH.PACKS} activeClassName={s.active}>Packs</NavLink>\r\n                <NavLink to={PATH.CARDS} activeClassName={s.active}>Cards</NavLink>\r\n                <NavLink to={PATH.FORGOT_PASSWORD} activeClassName={s.active}>ForgotPassword</NavLink>\r\n                <NavLink to={PATH.NEW_PASSWORD} activeClassName={s.active}>SetNewPassword</NavLink>\r\n                <SuperButton onClick={() => dispatch(logoutTC)}>Log out</SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Header} from \"./m1-ui/header/Header\";\r\nimport {Routes} from \"./m1-ui/routes/Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <>\r\n            <HashRouter>\r\n                <Header/>\r\n                <Routes/>\r\n            </HashRouter>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Loader.module.css';\r\n\r\nexport const Loader = () => {\r\n    return <div className={s.ldsCircle}>\r\n        <div></div>\r\n    </div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Main} from \"./n1-main/Main\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"./n1-main/m2-bll/store\";\r\nimport {RequestStatusType} from \"./n1-main/m2-bll/app-reducer\";\r\nimport {Loader} from \"./n1-main/m1-ui/superComponents/Loader/Loader\";\r\n\r\nconst App = () => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        {status === 'loading' && <Loader />}\r\n      <Main/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {registerReducer} from \"./registration-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {recoverPasswordReducer} from \"./recoverPassword-reducer\";\r\nimport {setNewPasswordReducer} from \"./setNewPassword-reducer\";\r\nimport {PacksActionsType, packsReducer} from \"./packs-reducer\";\r\nimport {CardsActionsType, cardsReducer} from \"./cards-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    register: registerReducer,\r\n    app: appReducer,\r\n    forgotPassword: recoverPasswordReducer,\r\n    setNewPassword: setNewPasswordReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n});\r\nexport type AppActions = PacksActionsType | CardsActionsType\r\nexport type AppThunkType<ReturnType= void> = ThunkAction<ReturnType, AppStoreType, unknown, AppActions>\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./n1-main/m2-bll/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <React.StrictMode>\r\n            <App/>\r\n        </React.StrictMode>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgr\":\"styles_bgr__3WPbN\",\"form\":\"styles_form__ynavo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardItem\":\"Card_cardItem__3aCl1\",\"cardSpecification\":\"Card_cardSpecification__m63BW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packItem\":\"Pack_packItem__1sY46\",\"packSpecification\":\"Pack_packSpecification__3K5dZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Header_active__IYuL5\",\"wrapper\":\"Header_wrapper__15i8W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packContents\":\"Packs_packContents__1T4hR\",\"titleParent\":\"Packs_titleParent__2Wtgn\",\"paginator\":\"Packs_paginator__2y9Yz\",\"filter\":\"Packs_filter__3sdg0\",\"pageCount\":\"Packs_pageCount__2d42Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__mWkiI\",\"errorInput\":\"SuperInputText_errorInput__3yOzh\",\"error\":\"SuperInputText_error__3KmT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1_C4x\",\"red\":\"SuperButton_red__2yMDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1fMZO\",\"spanClassName\":\"SuperCheckbox_spanClassName__3e5Ho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authError\":\"Login_authError__1a1YH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContents\":\"Cards_cardContents__hPMgJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsCircle\":\"Loader_ldsCircle__1RXqo\"};"],"sourceRoot":""}